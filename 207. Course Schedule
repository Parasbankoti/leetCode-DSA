class Solution {
public:

        
    bool check(unordered_map<int,vector<int>>& mp,int n,vector<int>& indegree){
            queue<int>q;
            int count=0;
            for(int i=0;i<n;i++){
                if(indegree[i] == 0)
              {
                    q.push(i);
                    count++;
              }
            }

            while(!q.empty()){
                int temp = q.front();
                q.pop();

                for(auto i:mp[temp]){
                    indegree[i]--;
                    if(indegree[i] == 0){
                        count++;
                        q.push(i);
                    }
                }
            }

            return count == n;

    }

    bool canFinish(int numCourses, vector<vector<int>>& prerequisites) {
        unordered_map<int,vector<int>>mp;
        vector<int>indegree(numCourses,0);
        for(auto i:prerequisites){
            mp[i[1]].push_back(i[0]);
            indegree[i[0]]++;
        }




        
        return check(mp,numCourses,indegree);
    }
};
